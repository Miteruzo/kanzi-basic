;*******************************************************************************
; ワﾟイル名  : android.hsp
; 更新年月日 : 平31/01/23
; 作成者     : Taker32X
; 作成年月日 : 平31/01/18
; 機能       : Android 版
;*******************************************************************************

#const global MAJOR_VER 0
#const global MINOR_VER 8
#const global PATCH_VER 0
#const global BUILD_NUM 134
#define global PROJECT_NAME ("kb_android")
#define global PROJECT_FILE ("android.hsp")

#addition "../mod_taker.as
#include "hsp3dish.as

#pack "utf8.dat
#packopt xsize 400
#packopt ysize 800

#const global SIZE_X 8
#const global SIZE_Y 16

#const global MAX_X 50
#const global MAX_Y 25

#enum KEYBOARD_NONE=0
#enum KEYBOARD_HEX
#enum KEYBOARD_RECOG

#undef Print
#define global Print(%1) Pos ginfo_cx,ginfo_cy-0.25*zooming_times@*SIZE_Y:Print@hsp %1

#undef Split

#module Substitution

#deffunc Split var in, str _delimiter, array out, local delimiter, local index, local oldindex, local temp
	sdim delimiter
	sdim out
	dim index
	dim oldindex
	dim temp
	delimiter = _delimiter
	repeat
		wait 0
		oldindex = index
		temp = instr(in, index, delimiter)
		if temp < 0 : index = strlen(in) + 1
		index += temp + strlen(delimiter)
		out(cnt) = strmid(in, oldindex, index - oldindex - strlen(delimiter))
		if index = strlen(in) + 1 + temp + strlen(delimiter) : index = cnt : break
	loop
	if index = 0 : out = in
	return index + 1

#global

#module Basic

#deffunc OnDisplay str p1
	work_len=p1
	Repeat StrLen(work_len)
		If cursor_x@+cnt>=MAX_X{
			cursor_x@=-cnt
			cursor_y@+
		}
		If cnt+cursor_x@<0{
			cursor_x@=0
		}
		data@(cnt+cursor_x@,cursor_y@)=Peek(work_len,cnt)or(color_r@<<8)or(color_g@<<16)or(color_b@<<24)
	Loop
	Return

#global

	Screen 0,SIZE_X*MAX_X,800
	keyboard_height=ginfo_winy-SIZE_Y*MAX_Y
	zooming_times=1F
	moving_pos_x=0
	moving_pos_y=0
	number=StrF("%c",$88)+StrF("%c",$EA),StrF("%c",$93)+StrF("%c",$F1),StrF("%c",$8E)+StrF("%c",$4F),StrF("%c",$8E)+StrF("%c",$6C),StrF("%c",$8C)+StrF("%c",$DC),StrF("%c",$98)+StrF("%c",$5A),StrF("%c",$8E)+StrF("%c",$B5),StrF("%c",$94)+StrF("%c",$AA),StrF("%c",$8B)+StrF("%c",$E3),StrF("%c",$8F)+StrF("%c",$5C),StrF("%c",$93)+StrF("%c",$F9),StrF("%c",$99)+StrF("%c",$BF),StrF("%c",$95)+StrF("%c",$53),StrF("%c",$90)+StrF("%c",$E7),StrF("%c",$E4)+StrF("%c",$DD),StrF("%c",$89)+StrF("%c",$AD),StrF("%c",$92)+StrF("%c",$9B),StrF("%c",$8B)+StrF("%c",$9E),StrF("%c",$9A)+StrF("%c",$B4),StrF("%c",$9E)+StrF("%c",$60),StrF("%c",$8F)+StrF("%c",$F5),StrF("%c",$8D)+StrF("%c",$61),StrF("%c",$8A)+StrF("%c",$C0),StrF("%c",$90)+StrF("%c",$B3),StrF("%c",$8D)+StrF("%c",$DA),StrF("%c",$8B)+StrF("%c",$C9)
	color_list=StrF("%c",$FC)+StrF("%c",$4B),StrF("%c",$FB)+StrF("%c",$F2),StrF("%c",$90)+StrF("%c",$D4),StrF("%c",$93)+StrF("%c",$8D),StrF("%c",$FB)+StrF("%c",$8D),StrF("%c",$90)+StrF("%c",$85),StrF("%c",$89)+StrF("%c",$A9),StrF("%c",$94)+StrF("%c",$92)
	function=0
	function_str=StrF("%c",$E6)+StrF("%c",$A4)+StrF("%c",$81)+StrF("%c",$75),StrF("%c",$88)+StrF("%c",$CF)+StrF("%c",$E5)+StrF("%c",$6A),StrF("%c",$8B)+StrF("%c",$8E),StrF("%c",$8B)+StrF("%c",$4C)+StrF("%c",$95)+StrF("%c",$B6),StrF("%c",$91)+StrF("%c",$96)+"\r",StrF("%c",$8F)+StrF("%c",$91)+StrF("%c",$81)+StrF("%c",$75),StrF("%c",$8C)+StrF("%c",$AE)+StrF("%c",$95)+StrF("%c",$A4)+StrF("%c",$90)+StrF("%c",$A5),StrF("%c",$8B)+StrF("%c",$4C),StrF("%c",$95)+StrF("%c",$D2)+StrF("%c",$8F)+StrF("%c",$53)+"\r",StrF("%c",$8D)+StrF("%c",$C4)+StrF("%c",$91)+StrF("%c",$96)+"\r
	through=StrF("%c",$81)+StrF("%c",$40)," "
	replace_from=StrF("%c",$95)+StrF("%c",$D2)+StrF("%c",$8F)+StrF("%c",$57),StrF("%c",$97)+StrF("%c",$5E),StrF("%c",$93)+StrF("%c",$C7),StrF("%c",$89)+StrF("%c",$E6),StrF("%c",$93)+StrF("%c",$5F),StrF("%c",$8C)+StrF("%c",$6F),StrF("%c",$8F)+StrF("%c",$5D),StrF("%c",$9C)+StrF("%c",$6E),StrF("%c",$91)+StrF("%c",$B1),StrF("%c",$8F)+StrF("%c",$E6),StrF("%c",$96)+StrF("%c",$9C),StrF("%c",$97)+StrF("%c",$5D),StrF("%c",$97)+StrF("%c",$90),StrF("%c",$89)+StrF("%c",$7E),StrF("%c",$8D)+StrF("%c",$86),StrF("%c",$94)+StrF("%c",$5D),StrF("%c",$8D)+StrF("%c",$95),StrF("%c",$90)+StrF("%c",$C2),StrF("%c",$97)+StrF("%c",$CE),StrF("%c",$91)+StrF("%c",$CE),StrF("%c",$89)+StrF("%c",$F3),StrF("%c",$8B)+StrF("%c",$41),StrF("%c",$8A)+StrF("%c",$D6),StrF("%c",$8E)+StrF("%c",$FB),StrF("%c",$94)+StrF("%c",$B2),StrF("%c",$96)+StrF("%c",$D4)
	replace_to  =StrF("%c",$95)+StrF("%c",$D2)+StrF("%c",$8F)+StrF("%c",$53),StrF("%c",$E4)+StrF("%c",$6F),StrF("%c",$E6)+StrF("%c",$A4),StrF("%c",$E1)+StrF("%c",$60),StrF("%c",$EA)+StrF("%c",$79),StrF("%c",$E3)+StrF("%c",$53),StrF("%c",$9C)+StrF("%c",$6E),StrF("%c",$98)+StrF("%c",$B8),StrF("%c",$E3)+StrF("%c",$94),StrF("%c",$98)+StrF("%c",$A9),StrF("%c",$E4)+StrF("%c",$DD),StrF("%c",$E9)+StrF("%c",$50),StrF("%c",$98)+StrF("%c",$AA),StrF("%c",$9A)+StrF("%c",$A2),StrF("%c",$E5)+StrF("%c",$6A),StrF("%c",$E4)+StrF("%c",$49),StrF("%c",$FC)+StrF("%c",$4B),StrF("%c",$FB)+StrF("%c",$F2),StrF("%c",$FB)+StrF("%c",$8D),StrF("%c",$9B)+StrF("%c",$94),StrF("%c",$9A)+StrF("%c",$D3),StrF("%c",$9F)+StrF("%c",$64),StrF("%c",$E8)+StrF("%c",$90),StrF("%c",$9D)+StrF("%c",$BE),StrF("%c",$9D)+StrF("%c",$55),StrF("%c",$E3)+StrF("%c",$A4)
	replace_from(Length(replace_from))=StrF("%c",$89)+StrF("%c",$9E),StrF("%c",$92)+StrF("%c",$66),StrF("%c",$88)+StrF("%c",$EB),StrF("%c",$91)+StrF("%c",$6F),StrF("%c",$97)+StrF("%c",$88),StrF("%c",$94)+StrF("%c",$AD),StrF("%c",$95)+StrF("%c",$CF),StrF("%c",$90)+StrF("%c",$94),StrF("%c",$91)+StrF("%c",$8B),StrF("%c",$8C)+StrF("%c",$61)
	replace_to  (Length(replace_to  ))=StrF("%c",$9C)+StrF("%c",$E4),StrF("%c",$9D)+StrF("%c",$D0),StrF("%c",$9A)+StrF("%c",$E3),StrF("%c",$99)+StrF("%c",$D4),StrF("%c",$98)+StrF("%c",$D2),StrF("%c",$E1)+StrF("%c",$A2),StrF("%c",$9D)+StrF("%c",$CC),StrF("%c",$9D)+StrF("%c",$C9),StrF("%c",$E2)+StrF("%c",$78),StrF("%c",$9C)+StrF("%c",$6C)
	Dim data,MAX_X,MAX_Y
	sDim program,256,65529
	mode_keyboard=KEYBOARD_RECOG
	Switch mode_keyboard
		Case KEYBOARD_HEX
			GoSub *ViewHexKey
			SwBreak
		Case KEYBOARD_RECOG
			GoSub *ViewRecog
			SwBreak
	SwEnd
	color_r=0:color_g=255:color_b=255
	OnDisplay StrF("%c%c%c%c%s%c%c%c%c%c%c%c%c%c%c%s%c%c%s",$8A,$BF,$8E,$9A," BASIC ",$81,$7C,$94,$7C,$8A,$EE,$8C,$4E,$81,$7C," ("+VERSION_NUMBER+" ",$E5,$6A,")")
	cursor_y+
	OnDisplay StrF("%s%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c","(C)",$8F,$BC,$93,$63,$97,$4C,$92,$98,$8D,$EC,$9E,$DC,$89,$97,$95,$BD,$90,$AC,$8E,$4F,$8F,$5C,$94,$4E)
	cursor_y+
	OnDisplay StrF("%c%c%c%c%c%d%c%c%c%c%c",$94,$5C,$97,$70,$20,VarSize(program)*Length(program),$20,$8E,$9A,$90,$DF)
	cursor_y+
	color_r=255:color_g=255:color_b=255
	OnDisplay "OK
	cursor_x=0:cursor_y+2
	sDim jis2utf8,65536*4
	bLoad "utf8.dat",jis2utf8,65536*4
	Repeat
		ReDraw 0
		Color 0,0,0
		BoxF 0,0,SIZE_X*MAX_X,SIZE_Y*MAX_Y
		mtInfo work,0
		If work(0){
			If 0<=mousex&&mousex<SIZE_X*MAX_X&&0<=mousey&&mousey<SIZE_Y*(MAX_Y-zooming_tiems*function){
				If cursor_x!=(mousex+moving_pos_x)/(zooming_times*SIZE_X)||cursor_y!=(mousey+moving_pos_y)/(zooming_times*SIZE_Y){
					cursor_x=(mousex+moving_pos_x)/(zooming_times*SIZE_X):cursor_y=(mousey+moving_pos_y)/(zooming_times*SIZE_Y)
					blink=0
					DevControl "vibrate",10
				}
			}
			If mode_keyboard==KEYBOARD_RECOG{
				If mousey>=SIZE_Y*MAX_Y{
					Color 255,255,255
					pSet mousex,mousey
				}
			}
		}
		Font MSGOTHIC,zooming_times*SIZE_Y
		If function{
			If choosing_range{
				Color 255,255,0
				Pos 0,SIZE_Y*(MAX_Y-1)
				Print "〔範圍選択中〕"
;				Color 0,255,0
;				Pos (SIZE_X*(1+trans_c2n@))*16,(ginfo_winy-statusbar@*stbar_sy@stbar(ginfo_sel))-SIZE_Y
;				Print "複写
			}Else{
				If SIZE_X*MAX_X>=(SIZE_X*(1+trans_c2n@))*(6*10+11){
					Repeat 10
						work_point=Double((SIZE_X*MAX_X-((SIZE_X*(1+trans_c2n@))*(6*10+8)))*((cnt>=5)+1))/3+(SIZE_X*(1+trans_c2n@))*(7*cnt-(cnt>=5))
						Color 255,255,255
						BoxF work_point,SIZE_Y*(MAX_Y-1),work_point+(SIZE_X*(1+trans_c2n@))*6,SIZE_Y*MAX_Y
						Color 0,0,0
						Pos work_point,SIZE_Y*(MAX_Y-1)
						Print StrMid(function_str(cnt),0,6)
					Loop
				}Else{
					Repeat 5
						work_point=Double((SIZE_X*MAX_X-((SIZE_X*(1+trans_c2n@))*(6*5+4))))/2+(SIZE_X*(1+trans_c2n@))*(7*cnt)
						Color 255,255,255
						BoxF work_point,SIZE_Y*(MAX_Y-1),work_point+(SIZE_X*(1+trans_c2n@))*6,SIZE_Y*MAX_Y
						Color 0,0,0
						Pos work_point,SIZE_Y*(MAX_Y-1)
						Print StrMid(function_str(cnt),0,6)
					Loop
				}
			}
		}
		If blink\32<16{
			work=Peek(data,(cursor_y*MAX_X+cursor_x)*4)
			Color 255,255,255
			If $81<=work&&work<=$9F||($E0<=work&&work<=$FC){
				BoxF zooming_times*SIZE_X*cursor_x-moving_pos_x,zooming_times*SIZE_Y*cursor_y-moving_pos_y,zooming_times*SIZE_X*(cursor_x+2)-moving_pos_x,zooming_times*SIZE_Y*(cursor_y+1)-moving_pos_y
			}Else{
				BoxF zooming_times*SIZE_X*cursor_x-moving_pos_x,zooming_times*SIZE_Y*cursor_y-moving_pos_y,zooming_times*SIZE_X*(cursor_x+1)-moving_pos_x,zooming_times*SIZE_Y*(cursor_y+1)-moving_pos_y
			}
		}
		Repeat MAX_X*(MAX_Y-function)
			work=data(cnt\MAX_X,cnt/MAX_X)and$FF
			If full{
				Pos zooming_times*((cnt-1)\MAX_X*SIZE_X)-moving_pos_x,zooming_times*((cnt-1)/MAX_X*SIZE_Y)-moving_pos_y
				Color (data((cnt-1)\MAX_X,(cnt-1)/MAX_X)>>8)and$FF,(data((cnt-1)\MAX_X,(cnt-1)/MAX_X)>>16)and$FF,(data((cnt-1)\MAX_X,(cnt-1)/MAX_X)>>24)and$FF
				If blink\32<16&&cnt-1==cursor_y*MAX_X+cursor_x{
					Color 255-ginfo_r,255-ginfo_g,255-ginfo_b
				}
				work2=lPeek(jis2utf8,((data((cnt-1)\MAX_X,(cnt-1)/MAX_X)and$FF)+(work<<8))*4)
				#ifndef _DEBUG
					Print StrF("%c%c%c%c",work2 and$FF,(work2>>8)and$FF,(work2>>16)and$FF,(work2>>24)and$FF)
				#else
					Print StrF("%c%c",data((cnt-1)\MAX_X,(cnt-1)/MAX_X)and$FF,work)
				#endif
				full=0
			}Else{
				If $81<=work&&work<=$9F||($E0<=work&&work<=$FC)&&Peek(data,(cnt/MAX_X+cnt\MAX_X+1)*4)!=0{
					full=1
				}Else{
					If data(cnt\MAX_X,cnt/MAX_X)\256{
						Pos zooming_times*(cnt\MAX_X*SIZE_X)-moving_pos_x,zooming_times*(cnt/MAX_X*SIZE_Y)-moving_pos_y
						Color (data(cnt\MAX_X,cnt/MAX_X)>>8)and$FF,(data(cnt\MAX_X,cnt/MAX_X)>>16)and$FF,(data(cnt\MAX_X,cnt/MAX_X)>>24)and$FF
						If blink\32<16&&cnt==cursor_y*MAX_X+cursor_x{
							Color 255-ginfo_r,255-ginfo_g,255-ginfo_b
						}
						Print StrF("%c",data(cnt\MAX_X,cnt/MAX_X)and$FF)
					}
				}
			}
		Loop
		Color 0,0,0
		BoxF 0,SIZE_Y*MAX_Y,SIZE_X*MAX_X,800
		Color 255,255,255
		Pos 128,SIZE_Y*MAX_Y
		Print number_code
		blink+
		ReDraw 1
		Await 15
	Loop

*NumKey
	number_code+StrF("%X",stat)
	DevControl "vibrate",10
	Return

*ClearNum
	number_code=""
	DevControl "vibrate",10
	Return

*RunCode
	Repeat StrLen(number_code)/2
		OnDisplay StrF("%c",Int("$"+StrMid(number_code,cnt*2,2)))
		Switch Int("$"+StrMid(number_code,cnt*2,2))
			Case $0A
			Case $0D
				GoSub *OnReturn
				SwBreak
			Default
				cursor_x+
				SwBreak
		SwEnd
	Loop
	If StrLen(number_code)\2{
		OnDisplay StrF("%c",Int("$"+StrMid(number_code,StrLen(number_code)-1,1)))
		Switch Int("$"+StrMid(number_code,StrLen(number_code)-1,1))
			Case$0A
			Case$0D
				GoSub *OnReturn
				SwBreak
			Default
				cursor_x+
				SwBreak
		SwEnd
	}
	number_code=""
	DevControl "vibrate",10
	Return

*BtnLeft
	cursor_x-
	DevControl "vibrate",10
	Return

*BtnRight
	cursor_x+
	DevControl "vibrate",10
	Return

*BtnUp
	cursor_y-
	DevControl "vibrate",10
	Return

*BtnDown
	cursor_y+
	DevControl "vibrate",10
	Return

*OnReturn
	sentence="
	Repeat MAX_X
		If (data(cnt,cursor_y)and$FF)==0{
			Break
		}
		sentence+StrF("%c",data(cnt,cursor_y)and$FF)
	Loop
	cursor_y+
	cursor_x=0
;	Split sentence,StrF("%c",$81)+StrF("%c",$75),work_a
	stat_=stat
	Repeat Length(through)
;		StrRep work_a(0),through(cnt),""
	Loop
	Repeat Length(replace_from)
;		StrRep work_a(0),replace_from(cnt),replace_to(cnt)
	Loop
	sentence=work_a(0)
	Repeat stat_-1,1
;		Split work_a(cnt),StrF("%c",$81)+StrF("%c",$76),work_b
		stat_=stat
		work_a(cnt)=work_b(0)
		cnt__=cnt
		Repeat stat_-1,1
			cnt_=cnt
			Repeat Length(through)
;				StrRep work_b(cnt_),through(cnt),""
			Loop
			Repeat Length(replace_from)
;				StrRep work_b(cnt_),replace_from(cnt),replace_to(cnt)
			Loop
			work_a(cnt__)+StrF("%c",$81)+StrF("%c",$76)+work_b(cnt)
		Loop
		sentence+StrF("%c",$81)+StrF("%c",$75)+work_a(cnt)
	Loop
	DevControl "vibrate",10
	Return

*ZoomIn
	zooming_times*1.05
	DevControl "vibrate",10
	Return

*ZoomOut
	zooming_times/1.05
	DevControl "vibrate",10
	Return

*ViewHexKey
	ClrObj
	Pos 0,SIZE_Y*MAX_Y
	Repeat 16
		If cnt==10: Pos 64,SIZE_Y*MAX_Y
		Button GoSub StrF("%X",cnt),*NumKey
	Loop
	Pos 64,SIZE_Y*MAX_Y+32*7
	Button GoSub "PUT",*RunCode
	Button GoSub "CLR",*ClearNum
	Pos 192,SIZE_Y*MAX_Y+224
	Button GoSub "←",*BtnLeft
	Pos 320,SIZE_Y*MAX_Y+224
	Button GoSub "→",*BtnRight
	Pos 256,SIZE_Y*MAX_Y+192
	Button GoSub "↑",*BtnUp
	Button GoSub "RETURN",*OnReturn
	Button GoSub "↓",*BtnDown
	Pos 256,SIZE_Y*MAX_Y+32
	Button GoSub "+",*ZoomIn
	Button GoSub "-",*ZoomOut
	number_code=""
	Return

*ViewRecog
	ClrObj
	Return
